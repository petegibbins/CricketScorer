using System.Text;
using CricketScorer.Models;

namespace CricketScorer.Views;

public partial class SummaryPage : ContentPage
{
    private readonly MatchResult result;

    public SummaryPage(MatchResult matchResult)
    {
        InitializeComponent();
        this.result = matchResult;
        ResultLabel.Text = matchResult.ResultText;
        ScoreSummaryLabel.Text = $"{matchResult.TeamA}: {matchResult.TeamAScore}  {matchResult.TeamB}: {matchResult.TeamBScore}";

        TeamAHeader.Text = $"{matchResult.TeamA} Summary";
        TeamAScoreLabel.Text = $"Score: {matchResult.TeamAScore} (Batting {matchResult.TeamABattingRuns}, Extras {matchResult.TeamAExtras})";
        TeamAPairStatsList.ItemsSource = matchResult.TeamABattingPairs;
        TeamABowlerStatsList.ItemsSource = matchResult.TeamBBowlingStats.OrderBy(x=>x.Bowler); // Team B bowled to Team A

        TeamBHeader.Text = $"{matchResult.TeamB} Summary";
        TeamBScoreLabel.Text = $"Score: {matchResult.TeamBScore} (Batting {matchResult.TeamBBattingRuns}, Extras {matchResult.TeamBExtras})";
        TeamBPairStatsList.ItemsSource = matchResult.TeamBBattingPairs;
        TeamBBowlerStatsList.ItemsSource = matchResult.TeamABowlingStats.OrderBy(x => x.Bowler); // Team A bowled to Team B
    }
    public string FormatSummaryText()
    {
        var sb = new StringBuilder();
        sb.AppendLine($"{result.TeamA} vs {result.TeamB}");
        sb.AppendLine($"Date: {result.DatePlayed:dd MMM yyyy}");
        sb.AppendLine(result.ResultText);
        sb.AppendLine();
        sb.AppendLine($"{result.TeamA} Score: {result.TeamAScore} (Batting: {result.TeamABattingRuns}, Extras: {result.TeamAExtras})");
        sb.AppendLine($"{result.TeamB} Score: {result.TeamBScore} (Batting: {result.TeamBBattingRuns}, Extras: {result.TeamBExtras})");
        sb.AppendLine();

        sb.AppendLine($"{result.TeamA}  Bowling Summary:");
        foreach (var b in result.TeamABowlingStats)
            sb.AppendLine($"{b.Bowler} - Runs: {b.RunsConceded}, Wkts: {b.Wickets}, Extras: {b.ExtrasConceded}");
        sb.AppendLine();

        sb.AppendLine($"{result.TeamB}  Bowling Summary:");
        foreach (var b in result.TeamBBowlingStats)
            sb.AppendLine($"{b.Bowler} - Runs: {b.RunsConceded}, Wkts: {b.Wickets}, Extras: {b.ExtrasConceded}");
        sb.AppendLine();
        sb.AppendLine("Generated by Petes Simple Softball Scorer");
        sb.AppendLine("(c) Red Dog Digital Ltd 2025");

        return sb.ToString();
    }
    private async void OnShareSummaryClicked(object sender, EventArgs e)
    {
        if (result != null)
        {
            var summary = FormatSummaryText();

            await Share.RequestAsync(new ShareTextRequest
            {
                Title = "Share Match Summary",
                Text = summary
            });
        }
        else
        {
            await DisplayAlert("Error", "No match summary found to share.", "OK");
        }
    }
}