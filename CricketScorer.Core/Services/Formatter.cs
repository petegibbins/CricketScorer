using CricketScorer.Core.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CricketScorer.Core.Services
{
    public class Formatter
    {
        public string FormatSummaryText(MatchResult result)
        {
            var sb = new StringBuilder();
            sb.AppendLine($"{result.TeamA} vs {result.TeamB}");
            sb.AppendLine($"Date: {result.DatePlayed:dd MMM yyyy}");
            sb.AppendLine(result.ResultText);
            sb.AppendLine();
            sb.AppendLine($"{result.TeamA} Score: {result.TeamAScore} (Batting: {result.TeamABattingRuns}, Extras: {result.TeamAExtras})");
            sb.AppendLine($"{result.TeamB} Score: {result.TeamBScore} (Batting: {result.TeamBBattingRuns}, Extras: {result.TeamBExtras})");
            sb.AppendLine();

            sb.AppendLine($"{result.TeamA}  Bowling Summary:");
            foreach (var b in result.TeamABowlingStats)
                sb.AppendLine($"{b.Bowler} - Runs: {b.RunsConceded}, Wkts: {b.Wickets}, Extras: {b.ExtrasConceded}");
            sb.AppendLine();

            sb.AppendLine($"{result.TeamB}  Bowling Summary:");
            foreach (var b in result.TeamBBowlingStats)
                sb.AppendLine($"{b.Bowler} - Runs: {b.RunsConceded}, Wkts: {b.Wickets}, Extras: {b.ExtrasConceded}");
            sb.AppendLine();
            sb.AppendLine("Generated by Petes Simple Softball Scorer");
            sb.AppendLine("(c) Red Dog Digital Ltd 2025");

            return sb.ToString();
        }

        public string FormatTargetLabel(Match currentMatch)
        {

            int target = currentMatch.TeamAScore + 1;
            int diff = currentMatch.Runs - target;

            if (diff < -1)
            {
                return $"Needs {-diff} more to win";
            }
            else if (diff == -1)
            {
                return "Scores level!";
            }
            else if (diff >= 0)
            {
                return $"{currentMatch.TeamB} is currently ahead by {diff + 1} run{(diff + 1 == 1 ? "" : "s")}.";
            }
            return string.Empty;
        }


    }
}
